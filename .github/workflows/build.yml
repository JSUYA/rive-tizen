name: Build Test

on:
  pull_request:
    branches:
      - master

jobs:
  build:
    env:
      THORVG_VERSION: 0.1.1
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Install Packages
      run: |
        sudo apt-get update
        sudo apt-get install ninja-build gcc-multilib g++-multilib meson

    - name: Build_thorvg
      env:
        DOWNLOAD_URL: 'https://github.com/Samsung/thorvg/archive/refs/tags/v${{ env.THORVG_VERSION }}.tar.gz'
        DIR_PATH: 'thorvg-${{ env.THORVG_VERSION }}'
      run: |
        wget -O thorvg.tar.gz ${{ env.DOWNLOAD_URL }}
        tar -zxvf thorvg.tar.gz
        cd ${{ env.DIR_PATH }}
        meson . build
        cd build
        sudo ninja -C . install
        cd ..

    - name: Build
      run: |
        meson . build
        cd build
        sudo ninja -C . install

  example_build:
    env:
      THORVG_VERSION: 0.1.1
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Install Packages
      run: |
        sudo apt-get update
        sudo add-apt-repository ppa:niko2040/e19
        sudo apt-get install ninja-build gcc-multilib g++-multilib meson
        sudo apt-get install libefl-dev

    - name: Build_thorvg
      env:
        DOWNLOAD_URL: 'https://github.com/Samsung/thorvg/archive/refs/tags/v${{ env.THORVG_VERSION }}.tar.gz'
        DIR_PATH: 'thorvg-${{ env.THORVG_VERSION }}'
      run: |
        wget -O thorvg.tar.gz ${{ env.DOWNLOAD_URL }}
        tar -zxvf thorvg.tar.gz
        cd ${{ env.DIR_PATH }}
        meson . build
        cd build
        sudo ninja -C . install
        cd ..

    - name: Build
      run: |
        meson . build -Dexamples=true
        cd build
        sudo ninja -C . install

